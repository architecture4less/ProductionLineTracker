/*
 * AUTH: Jared O'Toole
 * DATE: Wed Oct 16th 2019
 * PROJ: ProductionLineTracker
 * FILE: ProductionRecord.java
 *
 * Defines the ProductionRecord class.
 */

package me.jwotoole9141.prodsline.item;

import java.util.Date;
import me.jwotoole9141.prodsline.Model;

/**
 * A collection of metadata about the production of a product in the production line.
 *
 * @author Jared O'Toole
 */
public class ProductionRecord {

  /**
   * The unique production number of this record.
   */
  private int prodsNumber;

  /**
   * The id number of the produced product.
   */
  private int productId;

  /**
   * The id number of the employee who made this record.
   */
  private int employeeId;

  /**
   * The serial number of the produced product.
   */
  private String serialNumber;

  /**
   * The recorded date of production.
   */
  private Date dateProduced;

  /**
   * Creates a record for a produced product.
   *
   *
   * <ul>
   *   <li>A default production number of 0 is automatically assigned.</li>
   *   <li>A default serial number of "0" is automatically assigned.</li>
   *   <li>The current system time is used for date of production.</li>
   * </ul>
   *
   * @param productId the id of the product being produced
   */
  public ProductionRecord(int productId) {

    this.prodsNumber = 0;
    this.productId = productId;
    this.serialNumber = "0";
    this.dateProduced = new Date();
  }

  /**
   * Creates a record for a produced product.
   *
   * <ul>
   *   <li>A default production number of 0 is automatically assigned.</li>
   *   <li>The current system time is used for date of production.</li>
   * </ul>
   *
   * @param product    the product being produced
   * @param prodsCount the number of times this product has been produced
   */
  public ProductionRecord(Product product, int prodsCount) {

    this.prodsNumber = 0;
    this.productId = product.getId();
    this.serialNumber = Model.genSerialNum(product.getManuf(), product.getType(), prodsCount);
    this.dateProduced = new Date();
  }

  /**
   * Creates a representation of an existing production record.
   *
   * <p>
   * The production number of a record is automatically generated by the database. Therefore, this
   * constructor should only be used when fetching data from the database.
   * </p>
   *
   * @param prodsNumber  the unique production number
   * @param productId    the produced product id
   * @param employeeId   the employee producee id
   * @param serialNumber the produced product serial number
   * @param dateProduced the date of this production
   */
  public ProductionRecord(int prodsNumber, int productId, int employeeId,
      String serialNumber, Date dateProduced) {

    this.prodsNumber = prodsNumber;
    this.productId = productId;
    this.employeeId = employeeId;
    this.serialNumber = serialNumber;
    this.dateProduced = new Date(dateProduced.getTime());
  }

  /**
   * Gets the recorded production number.
   *
   * @return the production number
   */
  public int getProdsNumber() {

    return prodsNumber;
  }

  /**
   * Gets the recorded product identification number.
   *
   * @return the product id
   */
  public int getProductId() {

    return productId;
  }

  /**
   * Gets the employee recordee identification number.
   *
   * @return the employee id
   */
  public int getEmployeeId() {

    return employeeId;
  }

  /**
   * Gets the recorded product serial number.
   *
   * @return the product serial number
   */
  public String getSerialNumber() {

    return serialNumber;
  }

  /**
   * Gets the recorded date of production.
   *
   * @return the production date &amp; time
   */
  public Date getDateProduced() {

    return new Date(dateProduced.getTime());
  }

  /**
   * Sets the recorded production number.
   *
   * @param prodsNumber the production number
   */
  public void setProdsNumber(int prodsNumber) {

    this.prodsNumber = prodsNumber;
  }

  /**
   * Sets the recorded product identification number.
   *
   * @param productId the product id
   */
  public void setProductId(int productId) {

    this.productId = productId;
  }

  /**
   * Sets the identification number of the employee recordee.
   *
   * @param employeeId the employee id
   */
  public void setEmployeeId(int employeeId) {

    this.employeeId = employeeId;
  }

  /**
   * Sets the recorded product serial number.
   *
   * @param serialNumber the product serial number
   */
  public void setSerialNumber(String serialNumber) {

    this.serialNumber = serialNumber;
  }

  /**
   * Sets the recorded date of production.
   *
   * @param dateProduced the production date &amp; time
   */
  public void setDateProduced(Date dateProduced) {

    this.dateProduced = new Date(dateProduced.getTime());
  }

  /**
   * Gets a description string for this production record.
   *
   * <p>
   * This method queries the database, attempting to display the product name instead of its id.
   * </p>
   *
   * @return a single-line description
   */
  @Override
  public String toString() {

    if (productId > 0) {
      Product prod = Model.getProduct(productId);

      if (prod != null) {
        return String.format(
            "Prod. Num: %d Product Name: %s Serial Num: %s Date: %s",
            prodsNumber, prod.getName(), serialNumber, dateProduced
        );
      }
    }
    // NOTE: the string includes employee id in addition.
    return String.format(
        "Prod. Num: %d Product ID: %d Employee ID: %d Serial Num: %s Date: %s",
        prodsNumber, productId, employeeId, serialNumber, dateProduced
    );
  }
}
